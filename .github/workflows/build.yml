name: Build and Release AFM Macro

on:
  push:
    branches: [ lite ]

jobs:
  build-windows:
    runs-on: windows-2019

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version from file
        id: version
        run: |
          echo "VERSION=$(Get-Content version.txt)" >> $env:GITHUB_ENV

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: Install build requirements
        run: |
          pip install -r build-requirements.txt

      - name: Run PyInstaller
        run: |
          python -m PyInstaller AFM.spec

      - name: Create distribution zip
        run: |
          mkdir package
          cp dist/AFM.exe package/
          cp -r images package/
          cp -r ultrawide package/
          Compress-Archive -Path package/* -DestinationPath AFM.zip -Force

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: AFM Endless Macro - ${{ env.VERSION }}
          body: |
            Release version ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: AFM.zip
          asset_name: AFM.zip
          asset_content_type: application/zip

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/AFM.exe
          asset_name: AFM.exe
          asset_content_type: application/octet-stream